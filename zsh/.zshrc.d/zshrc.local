#!/bin/bash
##
# Copyright 2020 Anthony Marquez <@boogeymarquez>
#
# BSD licensed, see LICENSE.txt in this repository.

# Setting up Golang environment variables
export GOPATH=$HOME/golang
export GOBIN=$GOPATH/bin

# Mac specific installed with homebrew
if [[ "$(uname -s)" == "Darwin" ]]; then
  export GOROOT=/usr/local/opt/go/libexec
else
  export GOROOT=/usr/local/go
fi

# Conditional PATH additions
for path_candidate in $HOME/.pyenv/bin \
  /usr/local/go/bin \
  $GOPATH/bin
do
  if [ -d ${path_candidate} ]; then
    export PATH="${PATH}:${path_candidate}"
  fi
done

# Setup pyenv to manage Python environments
#export PATH="$HOME/.pyenv/bin:$PATH"
if which pyenv > /dev/null; then 
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

#   if which pyenv-virtualenv-init > /dev/null; then 
#     pyenv virtualenvwrapper_lazy
#   fi
fi

export VIRTUAL_ENV_DISABLE_PROMPT=1
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"

# Setup jenv to manage JAVA environments
# Try to find jenv, if it's not on the path
export JENV_ROOT="${JENV_ROOT:=${HOME}/.jenv}"
# if ! type jenv > /dev/null && [ -f "${JENV_ROOT}/bin/jenv" ]; then
#     export PATH="${JENV_ROOT}/bin:${PATH}"
# fi

# Lazy load jenv
if type jenv > /dev/null; then
    export PATH="${JENV_ROOT}/bin:${JENV_ROOT}/shims:${PATH}"
    function jenv() {
        unset -f jenv
        eval "$(command jenv init -)"
        jenv $@
    }
fi

# Adding nodenv
if which nodenv > /dev/null; then 
  eval "$(nodenv init -)"
fi

# Adding direnv tool
if which direnv > /dev/null; then 
  eval "$(direnv hook zsh)"
fi