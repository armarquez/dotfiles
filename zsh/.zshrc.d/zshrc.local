#!/bin/bash
##
# Copyright 2020 Anthony Marquez <@boogeymarquez>
#
# BSD licensed, see LICENSE.txt in this repository.

# Check if a command exists
has() {
  which "$@" > /dev/null 2>&1
}

# Setting up Golang environment variables
export GOPATH=$HOME/golang
export GOBIN=$GOPATH/bin

# Setting up pyenv environment variables
export PYENV_ROOT=$HOME/.pyenv

# Mac specific installed with homebrew
if [[ "$(uname -s)" == "Darwin" ]]; then
  export GOROOT=/usr/local/opt/go/libexec
else
  export GOROOT=/usr/local/go
fi

# Conditional PATH additions
for path_candidate in $PYENV_ROOT/bin \
  /usr/local/go/bin \
  $GOPATH/bin \
  "/Applications/Visual Studio Code.app/Contents/Resources/app/bin" \
  /Users/anthony_marquez/.local/bin
do
  if [ -d ${path_candidate} ]; then
    export PATH="${PATH}:${path_candidate}"
  fi
done

# Setup pyenv to manage Python environments
#export PATH="$HOME/.pyenv/bin:$PATH"
if has pyenv > /dev/null; then 
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"

  if has pyenv-virtualenv-init > /dev/null; then 
    eval "$(pyenv virtualenv-init -)"
#     pyenv virtualenvwrapper_lazy
  fi
fi

export VIRTUAL_ENV_DISABLE_PROMPT=1
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"

# Setup jenv to manage JAVA environments
# Try to find jenv, if it's not on the path
export JENV_ROOT="${JENV_ROOT:=${HOME}/.jenv}"
# if ! type jenv > /dev/null && [ -f "${JENV_ROOT}/bin/jenv" ]; then
#     export PATH="${JENV_ROOT}/bin:${PATH}"
# fi

# Lazy load jenv
if type jenv > /dev/null; then
    export PATH="${JENV_ROOT}/bin:${JENV_ROOT}/shims:${PATH}"
    function jenv() {
        unset -f jenv
        eval "$(command jenv init -)"
        jenv $@
    }
fi

# setup rbenv to manage Ruby environments
if has rbenv > /dev/null; then
  eval "$(rbenv init -)"
fi


# Adding nodenv
if has nodenv > /dev/null; then 
  eval "$(nodenv init -)"
fi

# Adding direnv tool
if has direnv > /dev/null; then 
  eval "$(direnv hook zsh)"
fi

# This is not commented out for `work-airbnb` branch
#####################################
########## AIRBNB SPECIFIC ##########
#####################################

# unset -f watch
# unset -f k
# source ~/.airlab/shellhelper.sh
# export ONETOUCHGEN_LDAP_USER=anthony_marquez
# export ONETOUCHGEN_ACCEPT_EULA=y

###########
### END ###
###########
